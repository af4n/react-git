{"version":3,"sources":["reportWebVitals.js","redux/reducers/reposReducer.js","redux/actions/repos.js","components/repo/Repo.js","components/main/Main.js","utils/pagesCreator.js","components/card/Card.js","components/error/Error.js","components/App.js","redux/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_REPOS","SET_IS_FETCHING","SET_CURRENT_PAGE","SET_FETCH_ERROR","defaultState","items","isFetching","currentPage","perPage","totalCount","isFetchError","setRepos","repos","type","payload","setIsFetching","bool","setCurrentPage","page","setFetchError","getRepos","searchQuery","dispatch","a","axios","get","response","data","setTimeout","getCurrentRepo","username","repoName","setRepo","getContributors","setContributors","Repo","props","repo","className","to","owner","login","name","stargazers_count","updated_at","href","html_url","Main","useDispatch","useSelector","state","useState","searchValue","setSearchValue","pages","pagesCount","i","push","createPages","Math","ceil","useEffect","role","placeholder","value","onChange","e","target","onClick","map","id","index","Card","useParams","reponame","contributors","history","goBack","class","src","avatar_url","alt","starzers_count","c","Error","App","exact","path","component","rootReducer","combineReducers","action","total_count","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f01afa5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_REPOS = \"SET_REPOS\"\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_FETCH_ERROR = \"SET_FETCH_ERROR\"\r\n\r\n\r\nconst defaultState = {\r\n  items: [],\r\n  isFetching: true,\r\n  currentPage: 1,\r\n  perPage: 10,\r\n  totalCount: 0,\r\n  isFetchError: false\r\n}\r\n\r\n\r\nexport default function reposReducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case SET_REPOS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n        totalCount: action.payload.total_count,\r\n        isFetching: false\r\n      }\r\n    case SET_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.payload\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      }\r\n    case SET_FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetchError: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setRepos = (repos) => ({type: SET_REPOS, payload: repos})\r\nexport const setIsFetching = (bool) => ({type: SET_IS_FETCHING, payload: bool})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, payload: page})\r\nexport const setFetchError = (bool) => ({type: SET_FETCH_ERROR, payload: bool})","import axios from 'axios'\r\nimport {setFetchError, setIsFetching, setRepos} from '../reducers/reposReducer'\r\n\r\nexport const getRepos = (searchQuery = 'stars:%3E1', currentPage, perPage) => {\r\n  if (searchQuery === '') {\r\n    searchQuery = 'stars:%3E1'\r\n  }\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setIsFetching(true))\r\n      const response = await axios.get(\r\n        `https://api.github.com/search/repositories?q=${searchQuery}&sort=stars&per_page=${perPage}&page=${currentPage}`\r\n      )\r\n      dispatch(setRepos(response.data))\r\n    } catch (e) {\r\n      dispatch(setFetchError(true))\r\n      dispatch(setIsFetching(false))\r\n      setTimeout(() => {\r\n        dispatch(setFetchError(false))\r\n      }, 2000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentRepo = async (username, repoName, setRepo) => {\r\n  const response = await axios.get(\r\n    `https://api.github.com/repos/${username}/${repoName}`\r\n  )\r\n  setRepo(response.data)\r\n}\r\n\r\nexport const getContributors = async (username, repoName, setContributors) => {\r\n  const response = await axios.get(\r\n    `https://api.github.com/repos/${username}/${repoName}/contributors?page=1&per_page=10`\r\n  )\r\n  setContributors(response.data)\r\n}\r\n","import React from 'react'\r\nimport './repo.scss'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Repo = (props) => {\r\n  const repo = props.repo\r\n\r\n  return (\r\n    <div className=\"repo list-group-item mt-2\">\r\n      <div className=\"repo-header \">\r\n        <div className=\"repo-header-name\">\r\n          <NavLink to={`/card/${repo.owner.login}/${repo.name}`}>\r\n            {repo.name}\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"repo-header-stars\">\r\n          Количество звезд: {repo.stargazers_count}\r\n        </div>\r\n      </div>\r\n      <div className=\"repo-last-commit\">\r\n        Последний коммит: {repo.updated_at}\r\n      </div>\r\n      <div>\r\n        <a href={repo.html_url} className=\"repo-link \">\r\n          Ссылка на репозиторий: {repo.html_url}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Repo\r\n","import React, {useEffect, useState} from \"react\"\r\nimport \"./main.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getRepos} from \"../../redux/actions/repos\";\r\nimport Repo from \"../repo/Repo\";\r\nimport {setCurrentPage} from \"../../redux/reducers/reposReducer\";\r\nimport {createPages} from \"../../utils/pagesCreator\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch()\r\n  const repos = useSelector(state => state.repos.items)\r\n  const isFetching = useSelector(state => state.repos.isFetching)\r\n  const currentPage = useSelector(state => state.repos.currentPage)\r\n  const totalCount = useSelector(state => state.repos.totalCount)\r\n  const perPage = useSelector(state => state.repos.perPage)\r\n  const isFetchError = useSelector(state => state.repos.isFetchError)\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n  const pagesCount = Math.ceil(totalCount/perPage)\r\n  const pages = []\r\n\r\n  createPages(pages, pagesCount, currentPage)\r\n  useEffect(() => {\r\n    dispatch(getRepos(searchValue, currentPage, perPage))\r\n  }, [currentPage])\r\n\r\n  function searchHandler() {\r\n    dispatch(setCurrentPage(1))\r\n    dispatch(getRepos(searchValue, currentPage, perPage))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isFetchError &&\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          Произошла ошибка! Пожалуйста, обновите страницу!\r\n        </div>\r\n      }\r\n      <div className=\"input-group mt-4 mb-4 search\">\r\n        <input type=\"text\"\r\n               className=\"form-control search-name\"\r\n               placeholder=\"Введите название репозитория\"\r\n               value={searchValue}\r\n               onChange={(e) => setSearchValue(e.target.value)}/>\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-outline-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => searchHandler()}>Поиск\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n      {\r\n        isFetching === false\r\n          ? repos.map(repo => <Repo repo={repo} key={repo.id}/>)\r\n          : <div className=\"fetching\"> </div>\r\n      }\r\n      <div className=\"pages\">\r\n        {\r\n          pages.map((page, index) => <span key={index}\r\n                                           className={currentPage === page\r\n                                             ? \"current-page\"\r\n                                             : \"page\"}\r\n          onClick={() => dispatch(setCurrentPage(page))}>{page}</span>)\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Main\r\n","export function createPages(pages, pagesCount, currentPage) {\r\n  if (pagesCount > 10) {\r\n    if (currentPage > 5) {\r\n      for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n        pages.push(i)\r\n        if (i === pagesCount) break\r\n      }\r\n    } else {\r\n      for (let i = 1; i <= 10; i++) {\r\n        pages.push(i)\r\n        if (i === pagesCount) break\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i)\r\n    }\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getCurrentRepo, getContributors } from '../../redux/actions/repos'\r\nimport './card.scss'\r\n\r\nconst Card = (props) => {\r\n  const { username, reponame } = useParams()\r\n  const [repo, setRepo] = useState({ owner: {} })\r\n  const [contributors, setContributors] = useState([])\r\n\r\n  useEffect(() => {\r\n    getCurrentRepo(username, reponame, setRepo)\r\n    getContributors(username, reponame, setContributors)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.history.goBack()} class=\"back-btn btn btn-secondary\">\r\n        Назад\r\n      </button>\r\n      <div className=\"card\">\r\n        <img src={repo.owner.avatar_url} alt=\"\" />\r\n        <hr/>\r\n        <div className=\"name\">{repo.name}</div>\r\n        <div className=\"stars\">{repo.starzers_count}</div>\r\n      </div>\r\n      <div className=\"contributors\">\r\n        <span>Авторы:</span>\r\n        {contributors.map((c, index) => (\r\n          <div>\r\n            {index + 1}. {c.login}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nconst Error = (props) => {\r\n  return (\r\n    <div>\r\n      <button onClick={() => props.history.push('/')}>GO TO MAIN PAGE</button>\r\n      ERROR\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error","import React from 'react'\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom'\nimport './app.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Main from './main/Main'\nimport Card from './card/Card'\nimport Error from \"./error/Error\";\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/card/:username/:reponame\" component={Card} />\n          <Route exact path=\"/error\" component={Error} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import {combineReducers} from \"redux\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\"\r\nimport reposReducer from \"./reposReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  repos: reposReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport './index.scss'\nimport App from './components/App.js'\nimport { store } from './redux/reducers'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}